diff --git a/lib/gnutls_priority.c b/lib/gnutls_priority.c
index c5998ab..ffefce1 100644
--- a/lib/gnutls_priority.c
+++ b/lib/gnutls_priority.c
@@ -684,7 +684,7 @@ int check_level(const char *level, gnutls_priority_t priority_cache,
 		func(&priority_cache->supported_ecc, supported_ecc_normal);
 
 		SET_PROFILE(GNUTLS_PROFILE_LOW); /* set certificate level */
-		SET_LEVEL(GNUTLS_SEC_PARAM_WEAK); /* set DH params level */
+		SET_LEVEL(GNUTLS_SEC_PARAM_LOW); /* set DH params level */
 		return 1;
 	} else if (strcasecmp(level, LEVEL_NORMAL) == 0) {
 		func(&priority_cache->cipher, cipher_priority_normal);
@@ -694,7 +694,7 @@ int check_level(const char *level, gnutls_priority_t priority_cache,
 		func(&priority_cache->supported_ecc, supported_ecc_normal);
 
 		SET_PROFILE(GNUTLS_PROFILE_LOW);
-		SET_LEVEL(GNUTLS_SEC_PARAM_WEAK);
+		SET_LEVEL(GNUTLS_SEC_PARAM_LOW);
 		return 1;
 	} else if (strcasecmp(level, LEVEL_PFS) == 0) {
 		func(&priority_cache->cipher, cipher_priority_normal);
@@ -704,7 +704,7 @@ int check_level(const char *level, gnutls_priority_t priority_cache,
 		func(&priority_cache->supported_ecc, supported_ecc_normal);
 
 		SET_PROFILE(GNUTLS_PROFILE_LOW);
-		SET_LEVEL(GNUTLS_SEC_PARAM_WEAK);
+		SET_LEVEL(GNUTLS_SEC_PARAM_LOW);
 		return 1;
 	} else if (strcasecmp(level, LEVEL_SECURE256) == 0
 		   || strcasecmp(level, LEVEL_SECURE192) == 0) {
