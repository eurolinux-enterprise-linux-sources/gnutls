diff -up gnutls-2.8.5/lib/gnutls_x509.c.pkcs8 gnutls-2.8.5/lib/gnutls_x509.c
--- gnutls-2.8.5/lib/gnutls_x509.c.pkcs8	2012-10-10 08:44:14.006574429 +0200
+++ gnutls-2.8.5/lib/gnutls_x509.c	2012-10-10 09:04:11.680030785 +0200
@@ -543,14 +543,6 @@ _gnutls_x509_raw_privkey_to_gkey (gnutls
     }
 
   ret = gnutls_x509_privkey_import (tmpkey, raw_key, type);
-
-#ifdef ENABLE_PKI
-  /* If normal key decoding doesn't work try decoding a plain PKCS #8 key */
-  if (ret < 0)
-    ret = gnutls_x509_privkey_import_pkcs8 (tmpkey, raw_key, type,
-					    NULL, GNUTLS_PKCS_PLAIN);
-#endif
-
   if (ret < 0)
     {
       gnutls_assert ();
diff -up gnutls-2.8.5/lib/x509/privkey.c.pkcs8 gnutls-2.8.5/lib/x509/privkey.c
--- gnutls-2.8.5/lib/x509/privkey.c.pkcs8	2009-06-02 20:59:32.000000000 +0200
+++ gnutls-2.8.5/lib/x509/privkey.c	2012-10-10 09:04:11.683030844 +0200
@@ -356,7 +356,8 @@ gnutls_x509_privkey_import (gnutls_x509_
       /* Try the first header */
       result =
 	_gnutls_fbase64_decode (PEM_KEY_RSA, data->data, data->size, &out);
-      key->pk_algorithm = GNUTLS_PK_RSA;
+
+      if (result == 0) key->pk_algorithm = GNUTLS_PK_RSA;
 
       if (result == GNUTLS_E_BASE64_UNEXPECTED_HEADER_ERROR)
 	{
@@ -364,15 +365,16 @@ gnutls_x509_privkey_import (gnutls_x509_
 	  result =
 	    _gnutls_fbase64_decode (PEM_KEY_DSA, data->data, data->size,
 				    &out);
-	  key->pk_algorithm = GNUTLS_PK_DSA;
-
 	  if (result <= 0)
 	    {
 	      if (result == 0)
 		result = GNUTLS_E_INTERNAL_ERROR;
 	      gnutls_assert ();
-	      return result;
+	      
+	      goto failover;
 	    }
+
+	  key->pk_algorithm = GNUTLS_PK_DSA;
 	}
 
       _data.data = out;
@@ -414,7 +416,7 @@ gnutls_x509_privkey_import (gnutls_x509_
     {
       gnutls_assert ();
       result = GNUTLS_E_ASN1_DER_ERROR;
-      goto cleanup;
+      goto failover;
     }
 
   if (need_free)
@@ -425,10 +427,20 @@ gnutls_x509_privkey_import (gnutls_x509_
 
   return 0;
 
-cleanup:
-  key->pk_algorithm = GNUTLS_PK_UNKNOWN;
+failover:
+  /* Try PKCS #8 */
+#ifdef ENABLE_PKI
+  if (result == GNUTLS_E_BASE64_UNEXPECTED_HEADER_ERROR)
+    {
+       _gnutls_debug_log("Falling back to PKCS #8 key decoding\n");
+       result = gnutls_x509_privkey_import_pkcs8 (key, data, format,
+                       NULL, GNUTLS_PKCS_PLAIN);
+    }
+#endif
+
   if (need_free)
     _gnutls_free_datum (&_data);
+
   return result;
 }
 
diff -up gnutls-2.8.5/src/certtool.c.pkcs8 gnutls-2.8.5/src/certtool.c
--- gnutls-2.8.5/src/certtool.c.pkcs8	2009-07-22 20:26:40.000000000 +0200
+++ gnutls-2.8.5/src/certtool.c	2012-10-10 09:04:11.687030932 +0200
@@ -1473,20 +1473,13 @@ privkey_info (void)
   /* If we failed to import the certificate previously try PKCS #8 */
   if (info.pkcs8 || ret == GNUTLS_E_BASE64_UNEXPECTED_HEADER_ERROR)
     {
-      /* first try to import the key without asking any password */
+      if (info.pass)
+        pass = info.pass;
+      else
+        pass = get_pass ();
       ret = gnutls_x509_privkey_import_pkcs8 (key, &pem,
-					      info.incert_format,
-					      NULL, GNUTLS_PKCS_PLAIN);
-      if (ret < 0)
-	{
-	  if (info.pass)
-	    pass = info.pass;
-	  else
-	    pass = get_pass ();
-	  ret = gnutls_x509_privkey_import_pkcs8 (key, &pem,
 						  info.incert_format,
 						  pass, 0);
-	}
     }
   if (ret < 0)
     error (EXIT_FAILURE, 0, "import error: %s", gnutls_strerror (ret));
